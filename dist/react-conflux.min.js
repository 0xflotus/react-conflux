"use strict";function _interopDefault(t){return t&&"object"==typeof t&&"default"in t?t.default:t}Object.defineProperty(exports,"__esModule",{value:!0});var React=require("react"),React__default=_interopDefault(React);function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _slicedToArray(t,e){return _arrayWithHoles(t)||_iterableToArrayLimit(t,e)||_nonIterableRest()}function _arrayWithHoles(t){if(Array.isArray(t))return t}function _iterableToArrayLimit(t,e){var o=[],r=!0,n=!1,a=void 0;try{for(var u,i=t[Symbol.iterator]();!(r=(u=i.next()).done)&&(o.push(u.value),!e||o.length!==e);r=!0);}catch(t){n=!0,a=t}finally{try{r||null==i.return||i.return()}finally{if(n)throw a}}return o}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}var StateProvider=function(t){var e=t.reducer,o=t.StateContext,r=t.children;if("function"!=typeof e)throw new Error("The reducer must be a function. You might have forgotten to pass your reducer into your StateProvider.");if(!o)throw new Error("StateContext is undefined. Please check your createContext method and what you are passing into your StateProvider.");if(void 0===r||"object"!==_typeof(r)||!Object.keys(r).length)throw new Error("StateProvider must contain children components. You probably forgot to wrap it around your components in your JSX.");var n=e(void 0,{type:"@conflux".concat(Math.random().toString(36).substring(7))}),a=_slicedToArray(React.useReducer(e,n),2),u=a[0],i=a[1],c=React.useMemo(function(){return[u,i]},[u]);return React__default.createElement(o.Provider,{value:c},r)},useStateValue=function(t){if(void 0===t)throw new Error("The StateContext object is undefined in your useStateValue hook. You probably forgot to pass the StateContext object into your useStateValue hook.");if(!t.Provider&&!t.Consumer)throw new Error("Incorrect argument passed to the useStateValue hook. You probably passed a variable other than your context object into it.");var e=React.useContext(t);if(void 0===e)throw new Error("The useStateValue hook must be used within the Provider of the Context object you have passed to it. Check to make sure you have passed in the correct context object and that the useStateValue hook is within a child of the correct Provider.");return e};exports.StateProvider=StateProvider,exports.useStateValue=useStateValue;
